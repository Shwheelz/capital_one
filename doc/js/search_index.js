var search_data = {"index":{"searchIndex":["account","atm","bill","branch","capitalone","config","customer","deposit","merchant","net","purchase","transfer","withdrawal","accountbaseurl()","apikey()","apikey()","apikey()","apikey()","apikey()","apikey()","apikey()","apikey()","apikey()","apikey()","baseurl()","createaccount()","createbill()","createcustomer()","createdeposit()","createmerchant()","createpurchase()","createtransfer()","createwithdrawal()","customerbaseurl()","deleteaccount()","deletebill()","deletedeposit()","deletepurchase()","deletetransfer()","deletewithdrawal()","getall()","getall()","getall()","getall()","getall()","getall()","getallbyaccountid()","getallbyaccountid()","getallbyaccountid()","getallbyaccountid()","getallbycustomerid()","getallbycustomerid()","getallbylocation()","getallbylocation()","getallbytype()","getallbytype()","getone()","getone()","getone()","getone()","getone()","getone()","getone()","getone()","getone()","getone()","getonebyaccountid()","updateaccount()","updatebill()","updatecustomer()","updatedeposit()","updatemerchant()","updatepurchase()","updatetransfer()","updatewithdrawal()","url()","url()","url()","url()","url()","url()","url()","url()","url()","url()","urlwithacctentity()","urlwithentity()","urlwithentity()","urlwithentity()","urlwithentity()","urlwithentity()","urlwithentity()","urlwithentity()","urlwithentity()","urlwithentity()","urlwithentity()","gemfile","guardfile","license","readme","rakefile","setup","capital_one.gemspec"],"longSearchIndex":["account","atm","bill","branch","capitalone","config","customer","deposit","merchant","net","purchase","transfer","withdrawal","bill::accountbaseurl()","account::apikey()","atm::apikey()","bill::apikey()","branch::apikey()","customer::apikey()","deposit::apikey()","merchant::apikey()","purchase::apikey()","transfer::apikey()","withdrawal::apikey()","config::baseurl()","account::createaccount()","bill::createbill()","customer::createcustomer()","deposit::createdeposit()","merchant::createmerchant()","purchase::createpurchase()","transfer::createtransfer()","withdrawal::createwithdrawal()","bill::customerbaseurl()","account::deleteaccount()","bill::deletebill()","deposit::deletedeposit()","purchase::deletepurchase()","transfer::deletetransfer()","withdrawal::deletewithdrawal()","account::getall()","atm::getall()","branch::getall()","customer::getall()","merchant::getall()","transfer::getall()","bill::getallbyaccountid()","deposit::getallbyaccountid()","purchase::getallbyaccountid()","withdrawal::getallbyaccountid()","account::getallbycustomerid()","bill::getallbycustomerid()","atm::getallbylocation()","merchant::getallbylocation()","account::getallbytype()","transfer::getallbytype()","account::getone()","atm::getone()","bill::getone()","branch::getone()","customer::getone()","deposit::getone()","merchant::getone()","purchase::getone()","transfer::getone()","withdrawal::getone()","customer::getonebyaccountid()","account::updateaccount()","bill::updatebill()","customer::updatecustomer()","deposit::updatedeposit()","merchant::updatemerchant()","purchase::updatepurchase()","transfer::updatetransfer()","withdrawal::updatewithdrawal()","account::url()","atm::url()","bill::url()","branch::url()","customer::url()","deposit::url()","merchant::url()","purchase::url()","transfer::url()","withdrawal::url()","customer::urlwithacctentity()","account::urlwithentity()","atm::urlwithentity()","bill::urlwithentity()","branch::urlwithentity()","customer::urlwithentity()","deposit::urlwithentity()","merchant::urlwithentity()","purchase::urlwithentity()","transfer::urlwithentity()","withdrawal::urlwithentity()","","","","","","",""],"info":[["Account","","Account.html","",""],["Atm","","Atm.html","",""],["Bill","","Bill.html","",""],["Branch","","Branch.html","",""],["CapitalOne","","CapitalOne.html","",""],["Config","","Config.html","","<p>Capital One API Gem\n\n<pre>This is a gem to wrap the Capital One public API.\nVisit api.reimaginebanking.com for more ...</pre>\n"],["Customer","","Customer.html","",""],["Deposit","","Deposit.html","",""],["Merchant","","Merchant.html","",""],["Net","","Net.html","",""],["Purchase","","Purchase.html","",""],["Transfer","","Transfer.html","",""],["Withdrawal","","Withdrawal.html","",""],["accountBaseUrl","Bill","Bill.html#method-c-accountBaseUrl","()",""],["apiKey","Account","Account.html#method-c-apiKey","()",""],["apiKey","Atm","Atm.html#method-c-apiKey","()",""],["apiKey","Bill","Bill.html#method-c-apiKey","()",""],["apiKey","Branch","Branch.html#method-c-apiKey","()",""],["apiKey","Customer","Customer.html#method-c-apiKey","()",""],["apiKey","Deposit","Deposit.html#method-c-apiKey","()",""],["apiKey","Merchant","Merchant.html#method-c-apiKey","()",""],["apiKey","Purchase","Purchase.html#method-c-apiKey","()",""],["apiKey","Transfer","Transfer.html#method-c-apiKey","()",""],["apiKey","Withdrawal","Withdrawal.html#method-c-apiKey","()",""],["baseUrl","Config","Config.html#method-c-baseUrl","()",""],["createAccount","Account","Account.html#method-c-createAccount","(custID, account)","<p>createAccount\n\n<pre>Creates a new account\nParameters: CustomerID, accountHash\nReturns the http response code.</pre>\n"],["createBill","Bill","Bill.html#method-c-createBill","(accountId, bill)","<p>createBill\n\n<pre>create a new bill on an associated account ID\nParameters: AccountId, BillJson\nJson is as follows: ...</pre>\n"],["createCustomer","Customer","Customer.html#method-c-createCustomer","(customer)","<p>createCustomer\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Creates</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">new</span> <span class=\"ruby-identifier\">customer</span> <span class=\"ruby-identifier\">with</span> <span class=\"ruby-identifier\">the</span> <span class=\"ruby-identifier\">given</span> <span class=\"ruby-identifier\">json</span> <span class=\"ruby-identifier\">data</span>\n</pre>\n<p>Parameters: CustomerHash\n"],["createDeposit","Deposit","Deposit.html#method-c-createDeposit","(toAcc, deposit)","<p>createDeposit\n\n<pre>Creates a new deposit.\nParameters: toAccountId, DepositHash\nDepositHash is formatted as ...</pre>\n"],["createMerchant","Merchant","Merchant.html#method-c-createMerchant","(merchant)","<p>createMerchant\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Creates</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">new</span> <span class=\"ruby-constant\">Merchant</span>\n</pre>\n<p>Parameters: MerchantHash\n"],["createPurchase","Purchase","Purchase.html#method-c-createPurchase","(accId, purchase)","\n<pre>*** POST ***</pre>\n<p>createPurchase\n\n<pre>Creates a new purchase for a given account</pre>\n"],["createTransfer","Transfer","Transfer.html#method-c-createTransfer","(accId, transfer)","\n<pre>*** POST ***</pre>\n<p>createAccount\n\n<pre>Creates a new transfer\nParameters: AccountID, TransferHash\nReturns the http ...</pre>\n"],["createWithdrawal","Withdrawal","Withdrawal.html#method-c-createWithdrawal","(toAcc, withdrawal)","<p>createWithdrawal\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Creates</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">new</span> <span class=\"ruby-identifier\">withdrawal</span>\n</pre>\n<p>Parameters: toAccountId, WithdrawalHash\n"],["customerBaseUrl","Bill","Bill.html#method-c-customerBaseUrl","()",""],["deleteAccount","Account","Account.html#method-c-deleteAccount","(accountId)","<p>deleteAccount\n\n<pre>delete a given account by accountId.\nParameters: AccountId.\nReturns the http response code.</pre>\n"],["deleteBill","Bill","Bill.html#method-c-deleteBill","(billId)","\n<pre>*** DELETE ***</pre>\n<p>deleteBill\n\n<pre>delete a bill by its id\nParameters: BillId\nReturns http response code</pre>\n"],["deleteDeposit","Deposit","Deposit.html#method-c-deleteDeposit","(id)","<p>deleteDeposit\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Deletes</span> <span class=\"ruby-identifier\">an</span> <span class=\"ruby-identifier\">existing</span> <span class=\"ruby-identifier\">deposit</span>\n</pre>\n<p>Parameters: DepositId\n"],["deletePurchase","Purchase","Purchase.html#method-c-deletePurchase","(id)","<p>deletePurchase\n\n<pre>Deletes a purchase for a given ID</pre>\n<p>Parameters: PurchaseId\n"],["deleteTransfer","Transfer","Transfer.html#method-c-deleteTransfer","(id)","\n<pre>*** DELETE ***</pre>\n<p>deleteAccount\n\n<pre>delete a given transfer by TransferId.\nParameters: TransferId.\nReturns the ...</pre>\n"],["deleteWithdrawal","Withdrawal","Withdrawal.html#method-c-deleteWithdrawal","(id)","<p>deleteWithdrawal\n\n<pre>Deletes a specified withdrawal from a specified account.\nParameters: WithdrawalID\nReturns ...</pre>\n"],["getAll","Account","Account.html#method-c-getAll","()","\n<pre>*** GET ***</pre>\n<p>getAll\n\n<pre>Returns an array of hashes getting all the customers.\nEach index in the array is the ...</pre>\n"],["getAll","Atm","Atm.html#method-c-getAll","()","<p>getAll\n\n<pre>Returns all ATMs as an array of hashes.</pre>\n"],["getAll","Branch","Branch.html#method-c-getAll","()","<p>getAll\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Gets</span> <span class=\"ruby-identifier\">all</span> <span class=\"ruby-identifier\">branches</span>\n<span class=\"ruby-constant\">Returns</span> <span class=\"ruby-identifier\">an</span> <span class=\"ruby-identifier\">array</span> <span class=\"ruby-identifier\">of</span> <span class=\"ruby-constant\">Hashes</span> <span class=\"ruby-identifier\">with</span> <span class=\"ruby-identifier\">the</span> <span class=\"ruby-identifier\">branch</span> <span class=\"ruby-identifier\">data</span>\n</pre>\n"],["getAll","Customer","Customer.html#method-c-getAll","()","<p>getAll\n\n<pre>Gets all customers the API key has acccess to.\nReturns an array of hashes.</pre>\n"],["getAll","Merchant","Merchant.html#method-c-getAll","()","<p>getAll\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Returns</span> <span class=\"ruby-identifier\">all</span> <span class=\"ruby-constant\">Merchants</span> <span class=\"ruby-identifier\">as</span> <span class=\"ruby-identifier\">an</span> <span class=\"ruby-identifier\">array</span> <span class=\"ruby-identifier\">of</span> <span class=\"ruby-identifier\">hashes</span>\n</pre>\n"],["getAll","Transfer","Transfer.html#method-c-getAll","(accId)","\n<pre>*** GET ***</pre>\n<p>getAll\n\n<pre>Returns an array of hashes getting all the transfers for an account.\nEach index in the ...</pre>\n"],["getAllByAccountId","Bill","Bill.html#method-c-getAllByAccountId","(accountId)","<p>getAllByAccountId\n\n<pre>Get all bills for a specific account\nParameters: accountId\nReturns an array of hashes ...</pre>\n"],["getAllByAccountId","Deposit","Deposit.html#method-c-getAllByAccountId","(accID)","\n<pre>*** GET ***</pre>\n<p>getAllByAccountId\n\n<pre>Get all deposits for a specific account</pre>\n"],["getAllByAccountId","Purchase","Purchase.html#method-c-getAllByAccountId","(accId)","<p>getAll\n\n<pre>Returns all purchases for a given account</pre>\n<p>Parameters: AccountId\n"],["getAllByAccountId","Withdrawal","Withdrawal.html#method-c-getAllByAccountId","(accID)","<p>getAllByAccountId\n\n<pre>Get all withdrawals for a specific account</pre>\n<p>Parameters: AccountID\n"],["getAllByCustomerId","Account","Account.html#method-c-getAllByCustomerId","(customerId)","<p>getAllByCustomerId\n\n<pre>Returns all accounts associated with a given customer ID as an array of hashes.</pre>\n<p>Parameters: …\n"],["getAllByCustomerId","Bill","Bill.html#method-c-getAllByCustomerId","(customerId)","<p>getAllByCustomerId\n\n<pre>Get all bills for a specific customer\nParameters: customerId\nReturns the customer as ...</pre>\n"],["getAllByLocation","Atm","Atm.html#method-c-getAllByLocation","(lat, lng, rad)","<p>getAllByLocation\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Get</span> <span class=\"ruby-identifier\">all</span> <span class=\"ruby-constant\">ATMs</span> <span class=\"ruby-identifier\">withing</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">certain</span> <span class=\"ruby-identifier\">radius</span> <span class=\"ruby-identifier\">of</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">geocoordinate</span>\n</pre>\n<p>Paremeters: latitude, longitude, …\n"],["getAllByLocation","Merchant","Merchant.html#method-c-getAllByLocation","(lat, lng, rad)","<p>getAllByLocation\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Returns</span> <span class=\"ruby-identifier\">all</span> <span class=\"ruby-constant\">Merchants</span> <span class=\"ruby-identifier\">within</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">given</span> <span class=\"ruby-identifier\">location</span> <span class=\"ruby-identifier\">range</span>\n</pre>\n<p>Parameters: Latitude, Longitude,  …\n"],["getAllByType","Account","Account.html#method-c-getAllByType","(type)","<p>getAllByType\n\n<pre>Gets all accounts of a given type.</pre>\n<p>Parameters: type\n"],["getAllByType","Transfer","Transfer.html#method-c-getAllByType","(accId, type)","<p>getAllByType\n\n<pre>Gets all transfers of a given type and account.</pre>\n<p>Parameters:\n"],["getOne","Account","Account.html#method-c-getOne","(id)","<p>getOne\n\n<pre>Returns the account specified by its account ID.</pre>\n<p>Parameters: AccountId\n"],["getOne","Atm","Atm.html#method-c-getOne","(id)","<p>getOne\n\n<pre>Gets one ATM for a given ID\nParameters: AtmId\nReturns the ATM that has the given ID.</pre>\n"],["getOne","Bill","Bill.html#method-c-getOne","(id)","<p>getOne\n\n<pre>Gets one bill for a specific billId\nParameters: billId\nReturns a hash with the bill data</pre>\n"],["getOne","Branch","Branch.html#method-c-getOne","(id)","<p>getOne\n\n<pre>Gets one branch for a given ID</pre>\n<p>Parameters: AtmId\n"],["getOne","Customer","Customer.html#method-c-getOne","(custId)","<p>getOne\n\n<pre>Gets the specified customer&#39;s information.</pre>\n<p>Parameters: CustomerId\n"],["getOne","Deposit","Deposit.html#method-c-getOne","(id)","<p>getOne\n\n<pre>Returns a deposit for a given ID</pre>\n<p>Parameters: DepositId\n"],["getOne","Merchant","Merchant.html#method-c-getOne","(merchId)","<p>getOne\n\n<pre>Returns a single merchant for a given ID</pre>\n<p>Parameters: MerchantId\n"],["getOne","Purchase","Purchase.html#method-c-getOne","(id)","<p>getOne\n\n<pre>Returns a purchase for a given ID</pre>\n<p>Parameters: PurchaseId\n"],["getOne","Transfer","Transfer.html#method-c-getOne","(id)","<p>getOne\n\n<pre>Returns the transfer specified by its transfer ID.</pre>\n<p>Parameters:\n"],["getOne","Withdrawal","Withdrawal.html#method-c-getOne","(id)","<p>getOne\n\n<pre>Get a single withdrawal for a given ID</pre>\n<p>Parameters: WithdrawalId\n"],["getOneByAccountId","Customer","Customer.html#method-c-getOneByAccountId","(accID)","<p>getOneByAccountId\n\n<pre>Get the customer for the given account.</pre>\n<p>Parameters: AccountId\n"],["updateAccount","Account","Account.html#method-c-updateAccount","(accountId, account)","<p>updateAccount\n\n<pre>Updates an account&#39;s nickname.</pre>\n<p>Parameters: AccountID, AccountHash\n"],["updateBill","Bill","Bill.html#method-c-updateBill","(billId, bill)","<p>updateBill\n\n<pre>Updates an account&#39;s information by id with given json data. \nParameters: BillId, BillJson ...</pre>\n"],["updateCustomer","Customer","Customer.html#method-c-updateCustomer","(custID, customer)","<p>updateCustomer\n\n<pre>Updates a customer by id with given json data.</pre>\n<p>Parameters: CustomerId, CustomerHash.\n"],["updateDeposit","Deposit","Deposit.html#method-c-updateDeposit","(id, deposit)","<p>updateDeposit\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Updates</span> <span class=\"ruby-identifier\">an</span> <span class=\"ruby-identifier\">existing</span> <span class=\"ruby-identifier\">deposit</span>\n</pre>\n<p>Parameters: DepositId, DepositHash\n"],["updateMerchant","Merchant","Merchant.html#method-c-updateMerchant","(merchId, merchant)","<p>updateMerchant\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Updates</span> <span class=\"ruby-identifier\">an</span> <span class=\"ruby-identifier\">existing</span> <span class=\"ruby-constant\">Merchant</span>\n</pre>\n<p>Parameters: MerchantId, MerchantHash\n"],["updatePurchase","Purchase","Purchase.html#method-c-updatePurchase","(id, purchase)","<p>updatePurchase\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Updates</span> <span class=\"ruby-identifier\">an</span> <span class=\"ruby-identifier\">existing</span> <span class=\"ruby-identifier\">purchase</span>\n</pre>\n<p>Parameters: PurchaseId, PurchaseHash\n"],["updateTransfer","Transfer","Transfer.html#method-c-updateTransfer","(id, transfer)","\n<pre>*** PUT ***</pre>\n<p>updateAccount\n\n<pre>Updates a transfer&#39;s info.\nParameters: TransferId, TransferHash\nReturns the http ...</pre>\n"],["updateWithdrawal","Withdrawal","Withdrawal.html#method-c-updateWithdrawal","(id, withdrawal)","<p>updateWithdrawal\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Updates</span> <span class=\"ruby-identifier\">an</span> <span class=\"ruby-identifier\">existing</span> <span class=\"ruby-identifier\">withdrawal</span>\n</pre>\n<p>Parameters: WithdrawalId, WithdrawalHash\n"],["url","Account","Account.html#method-c-url","()",""],["url","Atm","Atm.html#method-c-url","()",""],["url","Bill","Bill.html#method-c-url","()",""],["url","Branch","Branch.html#method-c-url","()",""],["url","Customer","Customer.html#method-c-url","()",""],["url","Deposit","Deposit.html#method-c-url","()",""],["url","Merchant","Merchant.html#method-c-url","()",""],["url","Purchase","Purchase.html#method-c-url","()",""],["url","Transfer","Transfer.html#method-c-url","()",""],["url","Withdrawal","Withdrawal.html#method-c-url","()",""],["urlWithAcctEntity","Customer","Customer.html#method-c-urlWithAcctEntity","()",""],["urlWithEntity","Account","Account.html#method-c-urlWithEntity","()",""],["urlWithEntity","Atm","Atm.html#method-c-urlWithEntity","()",""],["urlWithEntity","Bill","Bill.html#method-c-urlWithEntity","()",""],["urlWithEntity","Branch","Branch.html#method-c-urlWithEntity","()",""],["urlWithEntity","Customer","Customer.html#method-c-urlWithEntity","()",""],["urlWithEntity","Deposit","Deposit.html#method-c-urlWithEntity","()",""],["urlWithEntity","Merchant","Merchant.html#method-c-urlWithEntity","()",""],["urlWithEntity","Purchase","Purchase.html#method-c-urlWithEntity","()",""],["urlWithEntity","Transfer","Transfer.html#method-c-urlWithEntity","()",""],["urlWithEntity","Withdrawal","Withdrawal.html#method-c-urlWithEntity","()",""],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Specify your gem&#39;s dependencies in capital_one.gemspec gemspec\n"],["Guardfile","","Guardfile.html","","<p>guard &#39;rspec&#39; do\n\n<pre># watch /lib/ files\nwatch(%r{^lib/(.+).rb$}) do |m|\n  &quot;spec/#{m[1]}_spec.rb&quot; ...</pre>\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2015 Shane Besong\n<p>Permission is hereby granted, free of charge, to …\n"],["README","","README_md.html","","<p>capital_one\n<p>The capital_one gem interfaces Ruby developers with Capital One&#39;s\nHackathon API. Simply …\n"],["Rakefile","","Rakefile.html","","<p>require &#39;rspec/core/rake_task&#39; require &#39;bundler/gem_tasks&#39;\n<p># Default directory to look …\n"],["setup","","bin/setup.html","","<p>#!/bin/bash set -euo pipefail IFS=$&#39;nt&#39;\n<p>bundle install\n<p># Do any other automated setup that you …\n"],["capital_one.gemspec","","capital_one_gemspec.html","","<p>lib = File.expand_path(&#39;../lib&#39;, __FILE__) $LOAD_PATH.unshift(lib)\nunless $LOAD_PATH.include?(lib) …\n"]]}}